{"version":3,"sources":["../../src/util/animation.ts"],"names":["nullifyTransforms","el","rect","getBoundingClientRect","style","getComputedStyle","tx","transform","ta","sx","sy","dx","dy","startsWith","slice","split","to","transformOrigin","x","parseFloat","y","indexOf","w","width","offsetWidth","h","height","offsetHeight","top","right","bottom","left"],"mappings":"AAAA;AACA,OAAO,SAASA,iBAAT,CAA4BC,EAA5B,EAA6C;AAClD,QAAMC,IAAI,GAAGD,EAAE,CAACE,qBAAH,EAAb;AACA,QAAMC,KAAK,GAAGC,gBAAgB,CAACJ,EAAD,CAA9B;AACA,QAAMK,EAAE,GAAGF,KAAK,CAACG,SAAjB;;AAEA,MAAID,EAAJ,EAAQ;AACN,QAAIE,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB;;AACA,QAAIN,EAAE,CAACO,UAAH,CAAc,WAAd,CAAJ,EAAgC;AAC9BL,MAAAA,EAAE,GAAGF,EAAE,CAACQ,KAAH,CAAS,CAAT,EAAY,CAAC,CAAb,EAAgBC,KAAhB,CAAsB,IAAtB,CAAL;AACAN,MAAAA,EAAE,GAAG,CAACD,EAAE,CAAC,CAAD,CAAR;AACAE,MAAAA,EAAE,GAAG,CAACF,EAAE,CAAC,CAAD,CAAR;AACAG,MAAAA,EAAE,GAAG,CAACH,EAAE,CAAC,EAAD,CAAR;AACAI,MAAAA,EAAE,GAAG,CAACJ,EAAE,CAAC,EAAD,CAAR;AACD,KAND,MAMO,IAAIF,EAAE,CAACO,UAAH,CAAc,SAAd,CAAJ,EAA8B;AACnCL,MAAAA,EAAE,GAAGF,EAAE,CAACQ,KAAH,CAAS,CAAT,EAAY,CAAC,CAAb,EAAgBC,KAAhB,CAAsB,IAAtB,CAAL;AACAN,MAAAA,EAAE,GAAG,CAACD,EAAE,CAAC,CAAD,CAAR;AACAE,MAAAA,EAAE,GAAG,CAACF,EAAE,CAAC,CAAD,CAAR;AACAG,MAAAA,EAAE,GAAG,CAACH,EAAE,CAAC,CAAD,CAAR;AACAI,MAAAA,EAAE,GAAG,CAACJ,EAAE,CAAC,CAAD,CAAR;AACD,KANM,MAMA;AACL,aAAON,IAAP;AACD;;AAED,UAAMc,EAAE,GAAGZ,KAAK,CAACa,eAAjB;AACA,UAAMC,CAAC,GAAGhB,IAAI,CAACgB,CAAL,GAASP,EAAT,GAAc,CAAC,IAAIF,EAAL,IAAWU,UAAU,CAACH,EAAD,CAA7C;AACA,UAAMI,CAAC,GAAGlB,IAAI,CAACkB,CAAL,GAASR,EAAT,GAAc,CAAC,IAAIF,EAAL,IAAWS,UAAU,CAACH,EAAE,CAACF,KAAH,CAASE,EAAE,CAACK,OAAH,CAAW,GAAX,IAAkB,CAA3B,CAAD,CAA7C;AACA,UAAMC,CAAC,GAAGb,EAAE,GAAGP,IAAI,CAACqB,KAAL,GAAad,EAAhB,GAAqBR,EAAE,CAACuB,WAApC;AACA,UAAMC,CAAC,GAAGf,EAAE,GAAGR,IAAI,CAACwB,MAAL,GAAchB,EAAjB,GAAsBT,EAAE,CAAC0B,YAArC;AAEA,WAAO;AACLT,MAAAA,CADK;AACFE,MAAAA,CADE;AACCG,MAAAA,KAAK,EAAED,CADR;AACWI,MAAAA,MAAM,EAAED,CADnB;AACsBG,MAAAA,GAAG,EAAER,CAD3B;AAC8BS,MAAAA,KAAK,EAAEX,CAAC,GAAGI,CADzC;AAC4CQ,MAAAA,MAAM,EAAEV,CAAC,GAAGK,CADxD;AAC2DM,MAAAA,IAAI,EAAEb;AADjE,KAAP;AAGD,GA3BD,MA2BO;AACL,WAAOhB,IAAP;AACD;AACF","sourcesContent":["/** @see https://stackoverflow.com/a/57876601/2074736 */\nexport function nullifyTransforms (el: HTMLElement) {\n  const rect = el.getBoundingClientRect()\n  const style = getComputedStyle(el)\n  const tx = style.transform\n\n  if (tx) {\n    let ta, sx, sy, dx, dy\n    if (tx.startsWith('matrix3d(')) {\n      ta = tx.slice(9, -1).split(/, /)\n      sx = +ta[0]\n      sy = +ta[5]\n      dx = +ta[12]\n      dy = +ta[13]\n    } else if (tx.startsWith('matrix(')) {\n      ta = tx.slice(7, -1).split(/, /)\n      sx = +ta[0]\n      sy = +ta[3]\n      dx = +ta[4]\n      dy = +ta[5]\n    } else {\n      return rect\n    }\n\n    const to = style.transformOrigin\n    const x = rect.x - dx - (1 - sx) * parseFloat(to)\n    const y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(' ') + 1))\n    const w = sx ? rect.width / sx : el.offsetWidth\n    const h = sy ? rect.height / sy : el.offsetHeight\n\n    return {\n      x, y, width: w, height: h, top: y, right: x + w, bottom: y + h, left: x,\n    }\n  } else {\n    return rect\n  }\n}\n"],"file":"animation.mjs"}