{"remainingRequest":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\vuetify\\lib\\components\\VBadge\\VBadge.mjs","dependencies":[{"path":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\vuetify\\lib\\components\\VBadge\\VBadge.mjs","mtime":499162500000},{"path":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6L1VzZXJzL2NhcmxvL0Rlc2t0b3AvcHJ1ZWJhVGVjbmljYS9mYWN0dXJhY2lvbkdvbGFuZC9Gcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkM6L1VzZXJzL2NhcmxvL0Rlc2t0b3AvcHJ1ZWJhVGVjbmljYS9mYWN0dXJhY2lvbkdvbGFuZC9Gcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgeyB3aXRoRGlyZWN0aXZlcyBhcyBfd2l0aERpcmVjdGl2ZXMsIG1lcmdlUHJvcHMgYXMgX21lcmdlUHJvcHMsIHZTaG93IGFzIF92U2hvdywgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlIH0gZnJvbSAidnVlIjsgLy8gU3R5bGVzCgppbXBvcnQgIi4vVkJhZGdlLnNhc3MiOyAvLyBDb21wb25lbnRzCgppbXBvcnQgeyBWSWNvbiB9IGZyb20gIi4uL1ZJY29uL2luZGV4Lm1qcyI7IC8vIENvbXBvc2FibGVzCgppbXBvcnQgeyBtYWtlUm91bmRlZFByb3BzLCB1c2VSb3VuZGVkIH0gZnJvbSAiLi4vLi4vY29tcG9zYWJsZXMvcm91bmRlZC5tanMiOwppbXBvcnQgeyBtYWtlVGFnUHJvcHMgfSBmcm9tICIuLi8uLi9jb21wb3NhYmxlcy90YWcubWpzIjsKaW1wb3J0IHsgbWFrZVRyYW5zaXRpb25Qcm9wcywgTWF5YmVUcmFuc2l0aW9uIH0gZnJvbSAiLi4vLi4vY29tcG9zYWJsZXMvdHJhbnNpdGlvbi5tanMiOwppbXBvcnQgeyB1c2VCYWNrZ3JvdW5kQ29sb3IsIHVzZVRleHRDb2xvciB9IGZyb20gIi4uLy4uL2NvbXBvc2FibGVzL2NvbG9yLm1qcyI7IC8vIFV0aWxpdGllcwoKaW1wb3J0IHsgY29tcHV0ZWQsIHRvUmVmIH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgY29udmVydFRvVW5pdCwgZGVmaW5lQ29tcG9uZW50LCBleHRyYWN0IH0gZnJvbSAiLi4vLi4vdXRpbC9pbmRleC5tanMiOwpleHBvcnQgZGVmYXVsdCBkZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdWQmFkZ2UnLAogIGluaGVyaXRBdHRyczogZmFsc2UsCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHsKICAgIGJvcmRlcmVkOiBCb29sZWFuLAogICAgY29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAncHJpbWFyeScKICAgIH0sCiAgICBjb250ZW50OiBTdHJpbmcsCiAgICBkb3Q6IEJvb2xlYW4sCiAgICBmbG9hdGluZzogQm9vbGVhbiwKICAgIGljb246IFN0cmluZywKICAgIGlubGluZTogQm9vbGVhbiwKICAgIGxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJyR2dWV0aWZ5LmJhZGdlJwogICAgfSwKICAgIGxvY2F0aW9uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3RvcC1yaWdodCcsCiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKHZhbHVlKSB7CiAgICAgICAgdmFyIF9zcGxpdCA9ICh2YWx1ZSAhPSBudWxsID8gdmFsdWUgOiAnJykuc3BsaXQoJy0nKSwKICAgICAgICAgICAgX3NwbGl0MiA9IF9zbGljZWRUb0FycmF5KF9zcGxpdCwgMiksCiAgICAgICAgICAgIHZlcnRpY2FsID0gX3NwbGl0MlswXSwKICAgICAgICAgICAgaG9yaXpvbnRhbCA9IF9zcGxpdDJbMV07CgogICAgICAgIHJldHVybiBbJ3RvcCcsICdib3R0b20nXS5pbmNsdWRlcyh2ZXJ0aWNhbCkgJiYgWydsZWZ0JywgJ3JpZ2h0J10uaW5jbHVkZXMoaG9yaXpvbnRhbCk7CiAgICAgIH0KICAgIH0sCiAgICBtYXg6IFtOdW1iZXIsIFN0cmluZ10sCiAgICBtb2RlbFZhbHVlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICBvZmZzZXRYOiBbTnVtYmVyLCBTdHJpbmddLAogICAgb2Zmc2V0WTogW051bWJlciwgU3RyaW5nXSwKICAgIHRleHRDb2xvcjogU3RyaW5nCiAgfSwgbWFrZVJvdW5kZWRQcm9wcygpKSwgbWFrZVRhZ1Byb3BzKCkpLCBtYWtlVHJhbnNpdGlvblByb3BzKHsKICAgIHRyYW5zaXRpb246ICdzY2FsZS1yb3RhdGUtdHJhbnNpdGlvbicKICB9KSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzLCBjdHgpIHsKICAgIHZhciBfdXNlQmFja2dyb3VuZENvbG9yID0gdXNlQmFja2dyb3VuZENvbG9yKHRvUmVmKHByb3BzLCAnY29sb3InKSksCiAgICAgICAgYmFja2dyb3VuZENvbG9yQ2xhc3NlcyA9IF91c2VCYWNrZ3JvdW5kQ29sb3IuYmFja2dyb3VuZENvbG9yQ2xhc3NlcywKICAgICAgICBiYWNrZ3JvdW5kQ29sb3JTdHlsZXMgPSBfdXNlQmFja2dyb3VuZENvbG9yLmJhY2tncm91bmRDb2xvclN0eWxlczsKCiAgICB2YXIgX3VzZVJvdW5kZWQgPSB1c2VSb3VuZGVkKHByb3BzLCAndi1iYWRnZScpLAogICAgICAgIHJvdW5kZWRDbGFzc2VzID0gX3VzZVJvdW5kZWQucm91bmRlZENsYXNzZXM7CgogICAgdmFyIF91c2VUZXh0Q29sb3IgPSB1c2VUZXh0Q29sb3IodG9SZWYocHJvcHMsICd0ZXh0Q29sb3InKSksCiAgICAgICAgdGV4dENvbG9yQ2xhc3NlcyA9IF91c2VUZXh0Q29sb3IudGV4dENvbG9yQ2xhc3NlcywKICAgICAgICB0ZXh0Q29sb3JTdHlsZXMgPSBfdXNlVGV4dENvbG9yLnRleHRDb2xvclN0eWxlczsKCiAgICB2YXIgcG9zaXRpb24gPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBwcm9wcy5mbG9hdGluZyA/IHByb3BzLmRvdCA/IDIgOiA0IDogcHJvcHMuZG90ID8gOCA6IDEyOwogICAgfSk7CgogICAgZnVuY3Rpb24gY2FsY3VsYXRlUG9zaXRpb24ob2Zmc2V0KSB7CiAgICAgIHJldHVybiAiY2FsYygxMDAlIC0gIi5jb25jYXQoY29udmVydFRvVW5pdChwb3NpdGlvbi52YWx1ZSArIHBhcnNlSW50KG9mZnNldCAhPSBudWxsID8gb2Zmc2V0IDogMCwgMTApKSwgIikiKTsKICAgIH0KCiAgICB2YXIgbG9jYXRpb25TdHlsZXMgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcHJvcHMkbG9jYXRpb247CgogICAgICB2YXIgX3NwbGl0MyA9ICgoX3Byb3BzJGxvY2F0aW9uID0gcHJvcHMubG9jYXRpb24pICE9IG51bGwgPyBfcHJvcHMkbG9jYXRpb24gOiAnJykuc3BsaXQoJy0nKSwKICAgICAgICAgIF9zcGxpdDQgPSBfc2xpY2VkVG9BcnJheShfc3BsaXQzLCAyKSwKICAgICAgICAgIHZlcnRpY2FsID0gX3NwbGl0NFswXSwKICAgICAgICAgIGhvcml6b250YWwgPSBfc3BsaXQ0WzFdOyAvLyBUT0RPOiBSVEwgc3VwcG9ydAoKCiAgICAgIHZhciBzdHlsZXMgPSB7CiAgICAgICAgYm90dG9tOiAnYXV0bycsCiAgICAgICAgbGVmdDogJ2F1dG8nLAogICAgICAgIHJpZ2h0OiAnYXV0bycsCiAgICAgICAgdG9wOiAnYXV0bycKICAgICAgfTsKCiAgICAgIGlmICghcHJvcHMuaW5saW5lKSB7CiAgICAgICAgc3R5bGVzW2hvcml6b250YWwgPT09ICdsZWZ0JyA/ICdyaWdodCcgOiAnbGVmdCddID0gY2FsY3VsYXRlUG9zaXRpb24ocHJvcHMub2Zmc2V0WCk7CiAgICAgICAgc3R5bGVzW3ZlcnRpY2FsID09PSAndG9wJyA/ICdib3R0b20nIDogJ3RvcCddID0gY2FsY3VsYXRlUG9zaXRpb24ocHJvcHMub2Zmc2V0WSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzdHlsZXM7CiAgICB9KTsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfY3R4JHNsb3RzJGRlZmF1bHQsIF9jdHgkc2xvdHMsIF9jdHgkc2xvdHMkYmFkZ2UsIF9jdHgkc2xvdHMyOwoKICAgICAgdmFyIHZhbHVlID0gTnVtYmVyKHByb3BzLmNvbnRlbnQpOwogICAgICB2YXIgY29udGVudCA9ICFwcm9wcy5tYXggfHwgaXNOYU4odmFsdWUpID8gcHJvcHMuY29udGVudCA6IHZhbHVlIDw9IHByb3BzLm1heCA/IHZhbHVlIDogIiIuY29uY2F0KHByb3BzLm1heCwgIisiKTsKCiAgICAgIHZhciBfZXh0cmFjdCA9IGV4dHJhY3QoY3R4LmF0dHJzLCBbJ2FyaWEtYXRvbWljJywgJ2FyaWEtbGFiZWwnLCAnYXJpYS1saXZlJywgJ3JvbGUnLCAndGl0bGUnXSksCiAgICAgICAgICBfZXh0cmFjdDIgPSBfc2xpY2VkVG9BcnJheShfZXh0cmFjdCwgMiksCiAgICAgICAgICBiYWRnZUF0dHJzID0gX2V4dHJhY3QyWzBdLAogICAgICAgICAgYXR0cnMgPSBfZXh0cmFjdDJbMV07CgogICAgICByZXR1cm4gX2NyZWF0ZVZOb2RlKHByb3BzLnRhZywgX21lcmdlUHJvcHMoewogICAgICAgICJjbGFzcyI6IFsndi1iYWRnZScsIHsKICAgICAgICAgICd2LWJhZGdlLS1ib3JkZXJlZCc6IHByb3BzLmJvcmRlcmVkLAogICAgICAgICAgJ3YtYmFkZ2UtLWRvdCc6IHByb3BzLmRvdCwKICAgICAgICAgICd2LWJhZGdlLS1mbG9hdGluZyc6IHByb3BzLmZsb2F0aW5nLAogICAgICAgICAgJ3YtYmFkZ2UtLWlubGluZSc6IHByb3BzLmlubGluZQogICAgICAgIH1dCiAgICAgIH0sIGF0dHJzKSwgewogICAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoImRpdiIsIHsKICAgICAgICAgICAgImNsYXNzIjogInYtYmFkZ2VfX3dyYXBwZXIiCiAgICAgICAgICB9LCBbKF9jdHgkc2xvdHMkZGVmYXVsdCA9IChfY3R4JHNsb3RzID0gY3R4LnNsb3RzKS5kZWZhdWx0KSA9PSBudWxsID8gdm9pZCAwIDogX2N0eCRzbG90cyRkZWZhdWx0LmNhbGwoX2N0eCRzbG90cyksIF9jcmVhdGVWTm9kZShNYXliZVRyYW5zaXRpb24sIHsKICAgICAgICAgICAgInRyYW5zaXRpb24iOiBwcm9wcy50cmFuc2l0aW9uCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgICAgICAgIHJldHVybiBbX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgic3BhbiIsIF9tZXJnZVByb3BzKHsKICAgICAgICAgICAgICAgICJjbGFzcyI6IFsndi1iYWRnZV9fYmFkZ2UnLCBiYWNrZ3JvdW5kQ29sb3JDbGFzc2VzLnZhbHVlLCByb3VuZGVkQ2xhc3Nlcy52YWx1ZSwgdGV4dENvbG9yQ2xhc3Nlcy52YWx1ZV0sCiAgICAgICAgICAgICAgICAic3R5bGUiOiBbYmFja2dyb3VuZENvbG9yU3R5bGVzLnZhbHVlLCBsb2NhdGlvblN0eWxlcy52YWx1ZSwgdGV4dENvbG9yU3R5bGVzLnZhbHVlXSwKICAgICAgICAgICAgICAgICJhcmlhLWF0b21pYyI6ICJ0cnVlIiwKICAgICAgICAgICAgICAgICJhcmlhLWxhYmVsIjogImxvY2FsZSBzdHJpbmcgaGVyZSIsCiAgICAgICAgICAgICAgICAiYXJpYS1saXZlIjogInBvbGl0ZSIsCiAgICAgICAgICAgICAgICAicm9sZSI6ICJzdGF0dXMiCiAgICAgICAgICAgICAgfSwgYmFkZ2VBdHRycyksIFtwcm9wcy5kb3QgPyB1bmRlZmluZWQgOiBjdHguc2xvdHMuYmFkZ2UgPyAoX2N0eCRzbG90cyRiYWRnZSA9IChfY3R4JHNsb3RzMiA9IGN0eC5zbG90cykuYmFkZ2UpID09IG51bGwgPyB2b2lkIDAgOiBfY3R4JHNsb3RzJGJhZGdlLmNhbGwoX2N0eCRzbG90czIpIDogcHJvcHMuaWNvbiA/IF9jcmVhdGVWTm9kZShWSWNvbiwgewogICAgICAgICAgICAgICAgImljb24iOiBwcm9wcy5pY29uCiAgICAgICAgICAgICAgfSwgbnVsbCwgOCwgWyJpY29uIl0pIDogX2NyZWF0ZVZOb2RlKCJzcGFuIiwgewogICAgICAgICAgICAgICAgImNsYXNzIjogInYtYmFkZ2VfX2NvbnRlbnQiCiAgICAgICAgICAgICAgfSwgW2NvbnRlbnRdKV0sIDE2KSwgW1tfdlNob3csIHByb3BzLm1vZGVsVmFsdWVdXSldOwogICAgICAgICAgICB9CiAgICAgICAgICB9LCA4LCBbInRyYW5zaXRpb24iXSldKV07CiAgICAgICAgfQogICAgICB9LCAxNiwgWyJjbGFzcyJdKTsKICAgIH07CiAgfQp9KTs="},{"version":3,"sources":["../../../src/components/VBadge/VBadge.tsx"],"names":["VIcon","makeRoundedProps","useRounded","makeTagProps","makeTransitionProps","MaybeTransition","useBackgroundColor","useTextColor","convertToUnit","defineComponent","extract","name","inheritAttrs","props","bordered","color","type","default","content","dot","floating","icon","inline","label","location","validator","value","max","modelValue","offsetX","offsetY","textColor","transition","setup","backgroundColorStyles","toRef","roundedClasses","textColorStyles","position","computed","parseInt","offset","locationStyles","styles","bottom","left","right","top","horizontal","calculatePosition","vertical","Number","isNaN","ctx","backgroundColorClasses","textColorClasses"],"mappings":"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","sourcesContent":["// Styles\nimport './VBadge.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, extract } from '@/util'\n\nexport default defineComponent({\n  name: 'VBadge',\n\n  inheritAttrs: false,\n\n  props: {\n    bordered: Boolean,\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    content: String,\n    dot: Boolean,\n    floating: Boolean,\n    icon: String,\n    inline: Boolean,\n    label: {\n      type: String,\n      default: '$vuetify.badge',\n    },\n    location: {\n      type: String,\n      default: 'top-right',\n      validator: (value: string) => {\n        const [vertical, horizontal] = (value ?? '').split('-')\n\n        return (\n          ['top', 'bottom'].includes(vertical) &&\n          ['left', 'right'].includes(horizontal)\n        )\n      },\n    },\n    max: [Number, String],\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    offsetX: [Number, String],\n    offsetY: [Number, String],\n    textColor: String,\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeTransitionProps({ transition: 'scale-rotate-transition' }),\n  },\n\n  setup (props, ctx) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { roundedClasses } = useRounded(props, 'v-badge')\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'textColor'))\n\n    const position = computed(() => {\n      return props.floating\n        ? (props.dot ? 2 : 4)\n        : (props.dot ? 8 : 12)\n    })\n\n    function calculatePosition (offset?: number | string) {\n      return `calc(100% - ${convertToUnit(position.value + parseInt(offset ?? 0, 10))})`\n    }\n\n    const locationStyles = computed(() => {\n      const [vertical, horizontal] = (props.location ?? '').split('-')\n\n      // TODO: RTL support\n\n      const styles = {\n        bottom: 'auto',\n        left: 'auto',\n        right: 'auto',\n        top: 'auto',\n      }\n\n      if (!props.inline) {\n        styles[horizontal === 'left' ? 'right' : 'left'] = calculatePosition(props.offsetX)\n        styles[vertical === 'top' ? 'bottom' : 'top'] = calculatePosition(props.offsetY)\n      }\n\n      return styles\n    })\n\n    return () => {\n      const value = Number(props.content)\n      const content = (!props.max || isNaN(value)) ? props.content\n        : value <= props.max ? value\n        : `${props.max}+`\n\n      const [badgeAttrs, attrs] = extract(ctx.attrs, [\n        'aria-atomic',\n        'aria-label',\n        'aria-live',\n        'role',\n        'title',\n      ])\n\n      return (\n        <props.tag\n          class={[\n            'v-badge',\n            {\n              'v-badge--bordered': props.bordered,\n              'v-badge--dot': props.dot,\n              'v-badge--floating': props.floating,\n              'v-badge--inline': props.inline,\n            },\n          ]}\n          { ...attrs }\n        >\n          <div class=\"v-badge__wrapper\">\n            { ctx.slots.default?.() }\n\n            <MaybeTransition transition={ props.transition }>\n              <span\n                v-show={ props.modelValue }\n                class={[\n                  'v-badge__badge',\n                  backgroundColorClasses.value,\n                  roundedClasses.value,\n                  textColorClasses.value,\n                ]}\n                style={[\n                  backgroundColorStyles.value,\n                  locationStyles.value,\n                  textColorStyles.value,\n                ] as any} // TODO: Fix this :(\n                aria-atomic=\"true\"\n                aria-label=\"locale string here\" // TODO: locale string here\n                aria-live=\"polite\"\n                role=\"status\"\n                { ...badgeAttrs }\n              >\n                {\n                  props.dot ? undefined\n                  : ctx.slots.badge ? ctx.slots.badge?.()\n                  : props.icon ? <VIcon icon={props.icon} />\n                  : <span class=\"v-badge__content\">{content}</span>\n                }\n              </span>\n            </MaybeTransition>\n          </div>\n        </props.tag>\n      )\n    }\n  },\n})\n"]}]}