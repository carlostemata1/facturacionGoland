{"remainingRequest":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\vuetify\\lib\\composables\\group.mjs","dependencies":[{"path":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\vuetify\\lib\\composables\\group.mjs","mtime":499162500000},{"path":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../src/composables/group.ts"],"names":["useProxiedModel","consoleWarn","deepEqual","findChildren","getUid","propsFactory","wrapInArray","makeGroupProps","modelValue","type","default","undefined","multiple","mandatory","max","selectedClass","String","makeGroupItemProps","value","disabled","vm","getCurrentInstance","group","inject","injectKey","id","toRef","onBeforeUnmount","isSelected","computed","props","toggle","select","isUnmounted","items","reactive","selected","v","getIds","arr","getValues","groupVm","unwrapped","children","instances","cmp","index","forceMandatoryValue","item","onMounted","internalValue","currentId","currentIndex","i","newIndex","newItem","state","register","unregister","prev","step","next","provide","ids","values"],"mappings":"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","sourcesContent":["// Utilities\nimport { computed, getCurrentInstance, inject, onBeforeUnmount, onMounted, provide, reactive, toRef } from 'vue'\nimport { useProxiedModel } from './proxiedModel'\nimport { consoleWarn, deepEqual, findChildren, getUid, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { ComponentInternalInstance, InjectionKey, PropType, Ref, UnwrapRef } from 'vue'\n\ninterface GroupItem {\n  id: number\n  value: Ref<unknown>\n  disabled: Ref<boolean | undefined>\n}\n\ninterface GroupProps {\n  modelValue?: unknown\n  multiple?: boolean\n  mandatory?: boolean | 'force'\n  max?: number\n  selectedClass?: string\n}\n\ninterface GroupProvide {\n  register: (item: GroupItem, cmp: ComponentInternalInstance) => void\n  unregister: (id: number) => void\n  select: (id: number, value: boolean) => void\n  selected: Ref<any[]>\n  isSelected: (id: number) => boolean\n  prev: () => void\n  next: () => void\n  selectedClass: Ref<string | undefined>\n}\n\nexport const makeGroupProps = propsFactory({\n  modelValue: {\n    type: [Number, Boolean, String, Array, Object],\n    default: undefined,\n  },\n  multiple: Boolean,\n  mandatory: [Boolean, String] as PropType<boolean | 'force'>,\n  max: Number,\n  selectedClass: String,\n}, 'group')\n\nexport const makeGroupItemProps = propsFactory({\n  value: {\n    type: [Number, Boolean, String, Object],\n    default: undefined,\n  },\n  disabled: Boolean,\n  selectedClass: String,\n}, 'group-item')\n\n// Composables\nexport function useGroupItem (\n  props: { value?: unknown, disabled?: boolean, selectedClass?: string },\n  injectKey: InjectionKey<GroupProvide>,\n) {\n  const vm = getCurrentInstance()\n\n  if (!vm) {\n    throw new Error(\n      '[Vuetify] useGroupItem composable must be used inside a component setup function'\n    )\n  }\n\n  const group = inject(injectKey, null)\n\n  if (!group) {\n    throw new Error(`[Vuetify] Could not find useGroup injection with symbol ${injectKey.description}`)\n  }\n\n  const id = getUid()\n  const value = toRef(props, 'value')\n  const disabled = toRef(props, 'disabled')\n\n  group.register({\n    id,\n    value,\n    disabled,\n  }, vm)\n\n  onBeforeUnmount(() => {\n    group.unregister(id)\n  })\n\n  const isSelected = computed(() => {\n    return group.isSelected(id)\n  })\n\n  const selectedClass = computed(() => isSelected.value && (group.selectedClass.value ?? props.selectedClass))\n\n  return {\n    isSelected,\n    toggle: () => group.select(id, !isSelected.value),\n    select: (value: boolean) => group.select(id, value),\n    selectedClass,\n    value,\n    disabled,\n  }\n}\n\nexport function useGroup (\n  props: GroupProps,\n  injectKey: InjectionKey<GroupProvide>\n) {\n  let isUnmounted = false\n  const items = reactive<GroupItem[]>([])\n  const selected = useProxiedModel(\n    props,\n    'modelValue',\n    [],\n    v => {\n      if (v == null) return []\n\n      return getIds(items, wrapInArray(v))\n    },\n    v => {\n      const arr = getValues(items, v)\n\n      return props.multiple ? arr : arr[0]\n    }\n  )\n\n  const groupVm = getCurrentInstance()\n\n  function register (item: GroupItem, vm: ComponentInternalInstance) {\n    // Is there a better way to fix this typing?\n    const unwrapped = item as unknown as UnwrapRef<GroupItem>\n\n    const children = findChildren(groupVm?.vnode)\n    const instances = children\n      .slice(1) // First one is group component itself\n      .filter(cmp => !!cmp.provides[injectKey as any]) // TODO: Fix in TS 4.4\n    const index = instances.indexOf(vm)\n\n    if (index > -1) items.splice(index, 0, unwrapped)\n    else items.push(unwrapped)\n  }\n\n  function unregister (id: number) {\n    if (isUnmounted) return\n\n    selected.value = selected.value.filter(v => v !== id)\n\n    forceMandatoryValue()\n\n    const index = items.findIndex(item => item.id === id)\n    items.splice(index, 1)\n  }\n\n  // If mandatory and nothing is selected, then select first non-disabled item\n  function forceMandatoryValue () {\n    const item = items.find(item => !item.disabled)\n    if (item && props.mandatory === 'force' && !selected.value.length) {\n      selected.value = [item.id]\n    }\n  }\n\n  onMounted(() => {\n    forceMandatoryValue()\n  })\n\n  onBeforeUnmount(() => {\n    isUnmounted = true\n  })\n\n  function select (id: number, isSelected: boolean) {\n    const item = items.find(item => item.id === id)\n    if (isSelected && item?.disabled) return\n\n    if (props.multiple) {\n      const internalValue = selected.value.slice()\n      const index = internalValue.findIndex(v => v === id)\n\n      // We can't remove value if group is\n      // mandatory, value already exists,\n      // and it is the only value\n      if (\n        props.mandatory &&\n        index > -1 &&\n        internalValue.length <= 1\n      ) return\n\n      // We can't add value if it would\n      // cause max limit to be exceeded\n      if (\n        props.max != null &&\n        index < 0 &&\n        internalValue.length + 1 > props.max\n      ) return\n\n      if (index < 0 && isSelected) internalValue.push(id)\n      else if (index >= 0 && !isSelected) internalValue.splice(index, 1)\n\n      selected.value = internalValue\n    } else {\n      if (props.mandatory && selected.value.includes(id)) return\n\n      selected.value = isSelected ? [id] : []\n    }\n  }\n\n  function step (offset: number) {\n    // getting an offset from selected value obviously won't work with multiple values\n    if (props.multiple) consoleWarn('This method is not supported when using \"multiple\" prop')\n\n    if (!selected.value.length) {\n      const item = items.find(item => !item.disabled)\n      item && (selected.value = [item.id])\n    } else {\n      const currentId = selected.value[0]\n      const currentIndex = items.findIndex(i => i.id === currentId)\n\n      let newIndex = (currentIndex + offset) % items.length\n      let newItem = items[newIndex]\n\n      while (newItem.disabled && newIndex !== currentIndex) {\n        newIndex = (newIndex + offset) % items.length\n        newItem = items[newIndex]\n      }\n\n      if (newItem.disabled) return\n\n      selected.value = [items[newIndex].id]\n    }\n  }\n\n  const state = {\n    register,\n    unregister,\n    selected,\n    select,\n    prev: () => step(items.length - 1),\n    next: () => step(1),\n    isSelected: (id: number) => selected.value.includes(id),\n    selectedClass: computed(() => props.selectedClass),\n  }\n\n  provide(injectKey, state)\n\n  return state\n}\n\nfunction getIds (items: UnwrapRef<GroupItem[]>, modelValue: any[]) {\n  const ids = []\n  for (const item of items) {\n    if (item.value != null) {\n      if (modelValue.find(value => deepEqual(value, item.value))) {\n        ids.push(item.id)\n      }\n    } else if (modelValue.includes(item.id)) {\n      ids.push(item.id)\n    }\n  }\n\n  return ids\n}\n\nfunction getValues (items: UnwrapRef<GroupItem[]>, ids: any[]) {\n  const values = []\n\n  for (const item of items) {\n    if (ids.includes(item.id)) {\n      values.push(item.value != null ? item.value : item.id)\n    }\n  }\n\n  return values\n}\n"]}]}