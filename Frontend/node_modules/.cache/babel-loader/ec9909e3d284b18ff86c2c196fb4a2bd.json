{"remainingRequest":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\vuetify\\lib\\components\\VProgressCircular\\VProgressCircular.mjs","dependencies":[{"path":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\vuetify\\lib\\components\\VProgressCircular\\VProgressCircular.mjs","mtime":499162500000},{"path":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvY2FybG8vRGVza3RvcC9wcnVlYmFUZWNuaWNhL2ZhY3R1cmFjaW9uR29sYW5kL0Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlIH0gZnJvbSAidnVlIjsgLy8gU3R5bGVzCgppbXBvcnQgIi4vVlByb2dyZXNzQ2lyY3VsYXIuc2FzcyI7IC8vIENvbXBvc2FibGVzCgppbXBvcnQgeyBtYWtlU2l6ZVByb3BzLCB1c2VTaXplIH0gZnJvbSAiLi4vLi4vY29tcG9zYWJsZXMvc2l6ZS5tanMiOwppbXBvcnQgeyBtYWtlVGFnUHJvcHMgfSBmcm9tICIuLi8uLi9jb21wb3NhYmxlcy90YWcubWpzIjsKaW1wb3J0IHsgbWFrZVRoZW1lUHJvcHMsIHVzZVRoZW1lIH0gZnJvbSAiLi4vLi4vY29tcG9zYWJsZXMvdGhlbWUubWpzIjsKaW1wb3J0IHsgdXNlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgfSBmcm9tICIuLi8uLi9jb21wb3NhYmxlcy9pbnRlcnNlY3Rpb25PYnNlcnZlci5tanMiOwppbXBvcnQgeyB1c2VUZXh0Q29sb3IgfSBmcm9tICIuLi8uLi9jb21wb3NhYmxlcy9jb2xvci5tanMiOyAvLyBVdGlsaXRpZXMKCmltcG9ydCB7IGNvbXB1dGVkLCB0b1JlZiB9IGZyb20gJ3Z1ZSc7CmltcG9ydCB7IGNvbnZlcnRUb1VuaXQsIGRlZmluZUNvbXBvbmVudCB9IGZyb20gIi4uLy4uL3V0aWwvaW5kZXgubWpzIjsgLy8gVHlwZXMKCmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ1ZQcm9ncmVzc0NpcmN1bGFyJywKICBwcm9wczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoewogICAgYmdDb2xvcjogU3RyaW5nLAogICAgY29sb3I6IFN0cmluZywKICAgIGluZGV0ZXJtaW5hdGU6IFtCb29sZWFuLCBTdHJpbmddLAogICAgbW9kZWxWYWx1ZTogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAogICAgcm90YXRlOiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICB3aWR0aDogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLAogICAgICBkZWZhdWx0OiA0CiAgICB9CiAgfSwgbWFrZVNpemVQcm9wcygpKSwgbWFrZVRhZ1Byb3BzKHsKICAgIHRhZzogJ2RpdicKICB9KSksIG1ha2VUaGVtZVByb3BzKCkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcywgX3JlZikgewogICAgdmFyIHNsb3RzID0gX3JlZi5zbG90czsKICAgIHZhciBNQUdJQ19SQURJVVNfQ09OU1RBTlQgPSAyMDsKICAgIHZhciBDSVJDVU1GRVJFTkNFID0gMiAqIE1hdGguUEkgKiBNQUdJQ19SQURJVVNfQ09OU1RBTlQ7CgogICAgdmFyIF91c2VUaGVtZSA9IHVzZVRoZW1lKHByb3BzKSwKICAgICAgICB0aGVtZUNsYXNzZXMgPSBfdXNlVGhlbWUudGhlbWVDbGFzc2VzOwoKICAgIHZhciBfdXNlU2l6ZSA9IHVzZVNpemUocHJvcHMsICd2LXByb2dyZXNzLWNpcmN1bGFyJyksCiAgICAgICAgc2l6ZUNsYXNzZXMgPSBfdXNlU2l6ZS5zaXplQ2xhc3NlcywKICAgICAgICBzaXplU3R5bGVzID0gX3VzZVNpemUuc2l6ZVN0eWxlczsKCiAgICB2YXIgX3VzZVRleHRDb2xvciA9IHVzZVRleHRDb2xvcih0b1JlZihwcm9wcywgJ2NvbG9yJykpLAogICAgICAgIHRleHRDb2xvckNsYXNzZXMgPSBfdXNlVGV4dENvbG9yLnRleHRDb2xvckNsYXNzZXMsCiAgICAgICAgdGV4dENvbG9yU3R5bGVzID0gX3VzZVRleHRDb2xvci50ZXh0Q29sb3JTdHlsZXM7CgogICAgdmFyIF91c2VUZXh0Q29sb3IyID0gdXNlVGV4dENvbG9yKHRvUmVmKHByb3BzLCAnYmdDb2xvcicpKSwKICAgICAgICB1bmRlcmxheUNvbG9yQ2xhc3NlcyA9IF91c2VUZXh0Q29sb3IyLnRleHRDb2xvckNsYXNzZXMsCiAgICAgICAgdW5kZXJsYXlDb2xvclN0eWxlcyA9IF91c2VUZXh0Q29sb3IyLnRleHRDb2xvclN0eWxlczsKCiAgICB2YXIgX3VzZUludGVyc2VjdGlvbk9ic2VyID0gdXNlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoKSwKICAgICAgICBpbnRlcnNlY3Rpb25SZWYgPSBfdXNlSW50ZXJzZWN0aW9uT2JzZXIuaW50ZXJzZWN0aW9uUmVmLAogICAgICAgIGlzSW50ZXJzZWN0aW5nID0gX3VzZUludGVyc2VjdGlvbk9ic2VyLmlzSW50ZXJzZWN0aW5nOwoKICAgIHZhciBub3JtYWxpemVkVmFsdWUgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBNYXRoLm1heCgwLCBNYXRoLm1pbigxMDAsIHBhcnNlRmxvYXQocHJvcHMubW9kZWxWYWx1ZSkpKTsKICAgIH0pOwogICAgdmFyIHdpZHRoID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gTnVtYmVyKHByb3BzLndpZHRoKTsKICAgIH0pOwogICAgdmFyIHNpemUgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIC8vIEdldCBzaXplIGZyb20gZWxlbWVudCBpZiBzaXplIHByb3AgdmFsdWUgaXMgc21hbGwsIGxhcmdlIGV0YwogICAgICByZXR1cm4gc2l6ZVN0eWxlcy52YWx1ZSA/IE51bWJlcihwcm9wcy5zaXplKSA6IGludGVyc2VjdGlvblJlZi52YWx1ZSA/IGludGVyc2VjdGlvblJlZi52YWx1ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCA6IE1hdGgubWF4KHdpZHRoLnZhbHVlLCAzMik7CiAgICB9KTsKICAgIHZhciBkaWFtZXRlciA9IGNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIE1BR0lDX1JBRElVU19DT05TVEFOVCAvICgxIC0gd2lkdGgudmFsdWUgLyBzaXplLnZhbHVlKSAqIDI7CiAgICB9KTsKICAgIHZhciBzdHJva2VXaWR0aCA9IGNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHdpZHRoLnZhbHVlIC8gc2l6ZS52YWx1ZSAqIGRpYW1ldGVyLnZhbHVlOwogICAgfSk7CiAgICB2YXIgc3Ryb2tlRGFzaE9mZnNldCA9IGNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGNvbnZlcnRUb1VuaXQoKDEwMCAtIG5vcm1hbGl6ZWRWYWx1ZS52YWx1ZSkgLyAxMDAgKiBDSVJDVU1GRVJFTkNFKTsKICAgIH0pOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF9jcmVhdGVWTm9kZShwcm9wcy50YWcsIHsKICAgICAgICAicmVmIjogaW50ZXJzZWN0aW9uUmVmLAogICAgICAgICJjbGFzcyI6IFsndi1wcm9ncmVzcy1jaXJjdWxhcicsIHsKICAgICAgICAgICd2LXByb2dyZXNzLWNpcmN1bGFyLS1pbmRldGVybWluYXRlJzogISFwcm9wcy5pbmRldGVybWluYXRlLAogICAgICAgICAgJ3YtcHJvZ3Jlc3MtY2lyY3VsYXItLXZpc2libGUnOiBpc0ludGVyc2VjdGluZy52YWx1ZSwKICAgICAgICAgICd2LXByb2dyZXNzLWNpcmN1bGFyLS1kaXNhYmxlLXNocmluayc6IHByb3BzLmluZGV0ZXJtaW5hdGUgPT09ICdkaXNhYmxlLXNocmluaycKICAgICAgICB9LCB0aGVtZUNsYXNzZXMudmFsdWUsIHNpemVDbGFzc2VzLnZhbHVlLCB0ZXh0Q29sb3JDbGFzc2VzLnZhbHVlXSwKICAgICAgICAic3R5bGUiOiBbc2l6ZVN0eWxlcy52YWx1ZSwgdGV4dENvbG9yU3R5bGVzLnZhbHVlXSwKICAgICAgICAicm9sZSI6ICJwcm9ncmVzc2JhciIsCiAgICAgICAgImFyaWEtdmFsdWVtaW4iOiAiMCIsCiAgICAgICAgImFyaWEtdmFsdWVtYXgiOiAiMTAwIiwKICAgICAgICAiYXJpYS12YWx1ZW5vdyI6IHByb3BzLmluZGV0ZXJtaW5hdGUgPyB1bmRlZmluZWQgOiBub3JtYWxpemVkVmFsdWUudmFsdWUKICAgICAgfSwgewogICAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoInN2ZyIsIHsKICAgICAgICAgICAgInN0eWxlIjogewogICAgICAgICAgICAgIHRyYW5zZm9ybTogInJvdGF0ZShjYWxjKC05MGRlZyArICIuY29uY2F0KE51bWJlcihwcm9wcy5yb3RhdGUpLCAiZGVnKSkiKQogICAgICAgICAgICB9LAogICAgICAgICAgICAieG1sbnMiOiAiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLAogICAgICAgICAgICAidmlld0JveCI6ICIwIDAgIi5jb25jYXQoZGlhbWV0ZXIudmFsdWUsICIgIikuY29uY2F0KGRpYW1ldGVyLnZhbHVlKQogICAgICAgICAgfSwgW19jcmVhdGVWTm9kZSgiY2lyY2xlIiwgewogICAgICAgICAgICAiY2xhc3MiOiBbJ3YtcHJvZ3Jlc3MtY2lyY3VsYXJfX3VuZGVybGF5JywgdW5kZXJsYXlDb2xvckNsYXNzZXMudmFsdWVdLAogICAgICAgICAgICAic3R5bGUiOiB1bmRlcmxheUNvbG9yU3R5bGVzLnZhbHVlLAogICAgICAgICAgICAiZmlsbCI6ICJ0cmFuc3BhcmVudCIsCiAgICAgICAgICAgICJjeCI6ICI1MCUiLAogICAgICAgICAgICAiY3kiOiAiNTAlIiwKICAgICAgICAgICAgInIiOiBNQUdJQ19SQURJVVNfQ09OU1RBTlQsCiAgICAgICAgICAgICJzdHJva2Utd2lkdGgiOiBzdHJva2VXaWR0aC52YWx1ZSwKICAgICAgICAgICAgInN0cm9rZS1kYXNoYXJyYXkiOiBDSVJDVU1GRVJFTkNFLAogICAgICAgICAgICAic3Ryb2tlLWRhc2hvZmZzZXQiOiAwCiAgICAgICAgICB9LCBudWxsLCAxNCwgWyJyIiwgInN0cm9rZS13aWR0aCIsICJzdHJva2UtZGFzaGFycmF5Il0pLCBfY3JlYXRlVk5vZGUoImNpcmNsZSIsIHsKICAgICAgICAgICAgImNsYXNzIjogInYtcHJvZ3Jlc3MtY2lyY3VsYXJfX292ZXJsYXkiLAogICAgICAgICAgICAiZmlsbCI6ICJ0cmFuc3BhcmVudCIsCiAgICAgICAgICAgICJjeCI6ICI1MCUiLAogICAgICAgICAgICAiY3kiOiAiNTAlIiwKICAgICAgICAgICAgInIiOiBNQUdJQ19SQURJVVNfQ09OU1RBTlQsCiAgICAgICAgICAgICJzdHJva2Utd2lkdGgiOiBzdHJva2VXaWR0aC52YWx1ZSwKICAgICAgICAgICAgInN0cm9rZS1kYXNoYXJyYXkiOiBDSVJDVU1GRVJFTkNFLAogICAgICAgICAgICAic3Ryb2tlLWRhc2hvZmZzZXQiOiBzdHJva2VEYXNoT2Zmc2V0LnZhbHVlCiAgICAgICAgICB9LCBudWxsLCA4LCBbInIiLCAic3Ryb2tlLXdpZHRoIiwgInN0cm9rZS1kYXNoYXJyYXkiLCAic3Ryb2tlLWRhc2hvZmZzZXQiXSldKSwgc2xvdHMuZGVmYXVsdCAmJiBfY3JlYXRlVk5vZGUoImRpdiIsIHsKICAgICAgICAgICAgImNsYXNzIjogInYtcHJvZ3Jlc3MtY2lyY3VsYXJfX2NvbnRlbnQiCiAgICAgICAgICB9LCBbc2xvdHMuZGVmYXVsdCh7CiAgICAgICAgICAgIHZhbHVlOiBub3JtYWxpemVkVmFsdWUudmFsdWUKICAgICAgICAgIH0pXSldOwogICAgICAgIH0sCiAgICAgICAgXzogMQogICAgICB9LCA4LCBbImNsYXNzIiwgInN0eWxlIiwgImFyaWEtdmFsdWVub3ciXSk7CiAgICB9OwogIH0KfSk7"},{"version":3,"sources":["../../../src/components/VProgressCircular/VProgressCircular.tsx"],"names":["makeSizeProps","useSize","makeTagProps","makeThemeProps","useTheme","useIntersectionObserver","useTextColor","convertToUnit","defineComponent","name","props","bgColor","color","indeterminate","modelValue","type","default","rotate","width","tag","setup","slots","MAGIC_RADIUS_CONSTANT","CIRCUMFERENCE","Math","themeClasses","sizeStyles","textColorStyles","toRef","textColorClasses","underlayColorStyles","isIntersecting","normalizedValue","computed","parseFloat","Number","size","intersectionRef","diameter","strokeWidth","strokeDashOffset","sizeClasses","value","transform","underlayColorClasses"],"mappings":";;;mDAAA;;AACA,OAAA,0BAAA,C,CAEA;;SACSA,a,EAAeC,O;SACfC,Y;SACAC,c,EAAgBC,Q;SAChBC,uB;SACAC,Y,uCAET;;AACA,SAAA,QAAA,EAAA,KAAA,QAAA,KAAA;SACSC,a,EAAeC,e,gCAExB;;AAGA,eAAeA,eAAe,CAAC;AAC7BC,EAAAA,IAAI,EADyB,mBAAA;AAG7BC,EAAAA,KAAK;AACHC,IAAAA,OAAO,EADF,MAAF;AAEHC,IAAAA,KAAK,EAFA,MAAF;AAGHC,IAAAA,aAAa,EAAE,CAAA,OAAA,EAHV,MAGU,CAHZ;AAIHC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,CAAA,MAAA,EADI,MACJ,CADI;AAEVC,MAAAA,OAAO,EAAE;AAFC,KAJT;AAQHC,IAAAA,MAAM,EAAE;AACNF,MAAAA,IAAI,EAAE,CAAA,MAAA,EADA,MACA,CADA;AAENC,MAAAA,OAAO,EAAE;AAFH,KARL;AAYHE,IAAAA,KAAK,EAAE;AACLH,MAAAA,IAAI,EAAE,CAAA,MAAA,EADD,MACC,CADD;AAELC,MAAAA,OAAO,EAAE;AAFJ;AAZJ,KAiBAhB,aAjBE,EAAF,GAkBAE,YAAY,CAAC;AAAEiB,IAAAA,GAAG,EAAE;AAAP,GAAD,CAlBZ,GAmBAhB,cAAc,EAnBd,CAHwB;AAyB7BiB,EAAAA,KAzB6B,iBAyBxB,KAzBwB,QAyBJ;AAAA,QAATC,KAAS,QAATA,KAAS;AACvB,QAAMC,qBAAqB,GAA3B,EAAA;AACA,QAAMC,aAAa,GAAG,IAAIC,IAAI,CAAR,EAAA,GAAtB,qBAAA;;AAEA,oBAAyBpB,QAAQ,CAAjC,KAAiC,CAAjC;AAAA,QAAQqB,YAAR,aAAQA,YAAR;;AACA,mBAAoCxB,OAAO,CAAA,KAAA,EAA3C,qBAA2C,CAA3C;AAAA,QAAM,WAAN,YAAM,WAAN;AAAA,QAAqByB,UAArB,YAAqBA,UAArB;;AACA,wBAA8CpB,YAAY,CAACsB,KAAK,CAAA,KAAA,EAAhE,OAAgE,CAAN,CAA1D;AAAA,QAAM,gBAAN,iBAAM,gBAAN;AAAA,QAA0BD,eAA1B,iBAA0BA,eAA1B;;AACA,yBAAyFrB,YAAY,CAACsB,KAAK,CAAA,KAAA,EAA3G,SAA2G,CAAN,CAArG;AAAA,QAAM,oBAAN,kBAAQC,gBAAR;AAAA,QAAiEC,mBAAjE,kBAAgDH,eAAhD;;AACA,gCAA4CtB,uBAA5C,EAAA;AAAA,QAAM,eAAN,yBAAM,eAAN;AAAA,QAAyB0B,cAAzB,yBAAyBA,cAAzB;;AAEA,QAAMC,eAAe,GAAGC,QAAQ,CAAC;AAAA,aAAMT,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYA,IAAI,CAAJA,GAAAA,CAAAA,GAAAA,EAAcU,UAAU,CAACxB,KAAK,CAAjF,UAA2E,CAAxBc,CAAZA,CAAN;AAAA,KAAD,CAAhC;AACA,QAAMN,KAAK,GAAGe,QAAQ,CAAC;AAAA,aAAME,MAAM,CAACzB,KAAK,CAAzC,KAAmC,CAAZ;AAAA,KAAD,CAAtB;AACA,QAAM0B,IAAI,GAAGH,QAAQ,CAAC,YAAM;AAC1B;AACA,aAAOP,UAAU,CAAVA,KAAAA,GAAmBS,MAAM,CAACzB,KAAK,CAA/BgB,IAAyB,CAAzBA,GAAwCW,eAAe,CAAfA,KAAAA,GAC3CA,eAAe,CAAfA,KAAAA,CAAAA,qBAAAA,GAD2CA,KAAAA,GACWb,IAAI,CAAJA,GAAAA,CAASN,KAAK,CAAdM,KAAAA,EAD1D,EAC0DA,CAD1D;AAFF,KAAqB,CAArB;AAKA,QAAMc,QAAQ,GAAGL,QAAQ,CAAC;AAAA,aAAOX,qBAAqB,IAAI,IAAIJ,KAAK,CAALA,KAAAA,GAAckB,IAAI,CAAhD,KAAsB,CAArBd,GAAjC,CAA0B;AAAA,KAAD,CAAzB;AACA,QAAMiB,WAAW,GAAGN,QAAQ,CAAC;AAAA,aAAMf,KAAK,CAALA,KAAAA,GAAckB,IAAI,CAAlBlB,KAAAA,GAA2BoB,QAAQ,CAAtE,KAA6B;AAAA,KAAD,CAA5B;AACA,QAAME,gBAAgB,GAAGP,QAAQ,CAAC;AAAA,aAAM1B,aAAa,CAAE,CAAC,MAAMyB,eAAe,CAAtB,KAAA,IAAD,GAAC,GAAvD,aAAqD,CAAnB;AAAA,KAAD,CAAjC;AAEA,WAAO;AAAA,aAAA,YAAA,CAAA,KAAA,CAAA,GAAA,EAAA;AAAA,eAAA,eAAA;AAAA,iBAGI,CAAA,qBAAA,EAEL;AACE,gDAAsC,CAAC,CAACtB,KAAK,CAD/C,aAAA;AAEE,0CAAgCqB,cAAc,CAFhD,KAAA;AAGE,iDAAuCrB,KAAK,CAALA,aAAAA,KAAwB;AAHjE,SAFK,EAOLe,YAAY,CAPP,KAAA,EAQLgB,WAAW,CARN,KAAA,EASLZ,gBAAgB,CAZf,KAGI,CAHJ;AAAA,iBAcI,CACLH,UAAU,CADL,KAAA,EAELC,eAAe,CAhBd,KAcI,CAdJ;AAAA,gBAAA,aAAA;AAAA,yBAAA,GAAA;AAAA,yBAAA,KAAA;AAAA,yBAqBajB,KAAK,CAALA,aAAAA,GAAAA,SAAAA,GAAkCsB,eAAe,CAACU;AArB/D,OAAA,EAAA;AAAA,QAAA,OAAA,EAAA;AAAA,iBAAA,CAAA,YAAA,CAAA,KAAA,EAAA;AAAA,qBAwBM;AACLC,cAAAA,SAAS,iCAA0BR,MAAM,CAACzB,KAAK,CAAN,MAAA,CAAhC;AADJ,aAxBN;AAAA,qBAAA,4BAAA;AAAA,qCA4BgB4B,QAAQ,CAACI,KA5BzB,cA4BkCJ,QAAQ,CAACI,KA5B3C;AAAA,WAAA,EAAA,CAAA,YAAA,CAAA,QAAA,EAAA;AAAA,qBA+BQ,CAAA,+BAAA,EAELE,oBAAoB,CAjCvB,KA+BQ,CA/BR;AAAA,qBAmCSd,mBAAmB,CAnC5B,KAAA;AAAA,oBAAA,aAAA;AAAA,kBAAA,KAAA;AAAA,kBAAA,KAAA;AAAA,iBAAA,qBAAA;AAAA,4BAwCgBS,WAAW,CAxC3B,KAAA;AAAA,gCAAA,aAAA;AAAA,iCA0CqB;AA1CrB,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA,GAAA,EAAA,cAAA,EAAA,kBAAA,CAAA,CAAA,EAAA,YAAA,CAAA,QAAA,EAAA;AAAA,qBAAA,8BAAA;AAAA,oBAAA,aAAA;AAAA,kBAAA,KAAA;AAAA,kBAAA,KAAA;AAAA,iBAAA,qBAAA;AAAA,4BAmDgBA,WAAW,CAnD3B,KAAA;AAAA,gCAAA,aAAA;AAAA,iCAqDqBC,gBAAgB,CAACE;AArDtC,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,GAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,mBAAA,CAAA,CAAA,CAAA,CAAA,EAwDD,KAAK,CAAL,OAAA,IAAA,YAAA,CAAA,KAAA,EAAA;AAAA,qBACW;AADX,WAAA,EAAA,CAEI,KAAK,CAAL,OAAA,CAAc;AAAEA,YAAAA,KAAK,EAAEV,eAAe,CAACU;AAAzB,WAAd,CAFJ,CAAA,CAxDC,CAAA;AAAA,SAAA;AAAA,QAAA,CAAA,EAAA;AAAA,OAAA,EAAA,CAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAP,eAAO,CAAA,CAAA;AAAA,KAAP;AA+DD;AA7G4B,CAAD,CAA9B","sourcesContent":["// Styles\nimport './VProgressCircular.sass'\n\n// Composables\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'VProgressCircular',\n\n  props: {\n    bgColor: String,\n    color: String,\n    indeterminate: [Boolean, String] as PropType<boolean | 'disable-shrink'>,\n    modelValue: {\n      type: [Number, String],\n      default: 0,\n    },\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'div' }),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const MAGIC_RADIUS_CONSTANT = 20\n    const CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT\n\n    const { themeClasses } = useTheme(props)\n    const { sizeClasses, sizeStyles } = useSize(props, 'v-progress-circular')\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n    const { textColorClasses: underlayColorClasses, textColorStyles: underlayColorStyles } = useTextColor(toRef(props, 'bgColor'))\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n\n    const normalizedValue = computed(() => Math.max(0, Math.min(100, parseFloat(props.modelValue))))\n    const width = computed(() => Number(props.width))\n    const size = computed(() => {\n      // Get size from element if size prop value is small, large etc\n      return sizeStyles.value ? Number(props.size) : intersectionRef.value\n        ? intersectionRef.value.getBoundingClientRect().width : Math.max(width.value, 32)\n    })\n    const diameter = computed(() => (MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value)) * 2)\n    const strokeWidth = computed(() => width.value / size.value * diameter.value)\n    const strokeDashOffset = computed(() => convertToUnit(((100 - normalizedValue.value) / 100) * CIRCUMFERENCE))\n\n    return () => (\n      <props.tag\n        ref={ intersectionRef }\n        class={[\n          'v-progress-circular',\n          {\n            'v-progress-circular--indeterminate': !!props.indeterminate,\n            'v-progress-circular--visible': isIntersecting.value,\n            'v-progress-circular--disable-shrink': props.indeterminate === 'disable-shrink',\n          },\n          themeClasses.value,\n          sizeClasses.value,\n          textColorClasses.value,\n        ]}\n        style={[\n          sizeStyles.value,\n          textColorStyles.value,\n        ]}\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        aria-valuenow={ props.indeterminate ? undefined : normalizedValue.value }\n      >\n        <svg\n          style={{\n            transform: `rotate(calc(-90deg + ${Number(props.rotate)}deg))`,\n          }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox={ `0 0 ${diameter.value} ${diameter.value}` }\n        >\n          <circle\n            class={[\n              'v-progress-circular__underlay',\n              underlayColorClasses.value,\n            ]}\n            style={ underlayColorStyles.value }\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ 0 }\n          />\n\n          <circle\n            class=\"v-progress-circular__overlay\"\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ strokeDashOffset.value }\n          />\n        </svg>\n        { slots.default && (\n          <div class=\"v-progress-circular__content\">\n            { slots.default({ value: normalizedValue.value }) }\n          </div>\n        ) }\n      </props.tag>\n    )\n  },\n})\n"]}]}