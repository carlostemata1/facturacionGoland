{"remainingRequest":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\vuetify\\lib\\components\\VBreadcrumbs\\VBreadcrumbs.mjs","dependencies":[{"path":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\vuetify\\lib\\components\\VBreadcrumbs\\VBreadcrumbs.mjs","mtime":499162500000},{"path":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\carlo\\Desktop\\pruebaTecnica\\facturacionGoland\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvY2FybG8vRGVza3RvcC9wcnVlYmFUZWNuaWNhL2ZhY3R1cmFjaW9uR29sYW5kL0Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0IHsgbWVyZ2VQcm9wcyBhcyBfbWVyZ2VQcm9wcywgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUgfSBmcm9tICJ2dWUiOyAvLyBTdHlsZXMKCmltcG9ydCAiLi9WQnJlYWRjcnVtYnMuc2FzcyI7IC8vIENvbXBvbmVudHMKCmltcG9ydCBWQnJlYWRjcnVtYnNJdGVtIGZyb20gIi4vVkJyZWFkY3J1bWJzSXRlbS5tanMiOwppbXBvcnQgVkJyZWFkY3J1bWJzRGl2aWRlciBmcm9tICIuL1ZCcmVhZGNydW1ic0RpdmlkZXIubWpzIjsKaW1wb3J0IHsgVkljb24gfSBmcm9tICIuLi9WSWNvbi9pbmRleC5tanMiOyAvLyBDb21wb3NhYmxlcwoKaW1wb3J0IHsgbWFrZURlbnNpdHlQcm9wcywgdXNlRGVuc2l0eSB9IGZyb20gIi4uLy4uL2NvbXBvc2FibGVzL2RlbnNpdHkubWpzIjsKaW1wb3J0IHsgbWFrZVJvdW5kZWRQcm9wcywgdXNlUm91bmRlZCB9IGZyb20gIi4uLy4uL2NvbXBvc2FibGVzL3JvdW5kZWQubWpzIjsKaW1wb3J0IHsgbWFrZVRhZ1Byb3BzIH0gZnJvbSAiLi4vLi4vY29tcG9zYWJsZXMvdGFnLm1qcyI7CmltcG9ydCB7IHVzZVRleHRDb2xvciB9IGZyb20gIi4uLy4uL2NvbXBvc2FibGVzL2NvbG9yLm1qcyI7IC8vIFV0aWxpdGllcwoKaW1wb3J0IHsgY29tcHV0ZWQsIHByb3ZpZGUsIHRvUmVmIH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50IH0gZnJvbSAiLi4vLi4vdXRpbC9pbmRleC5tanMiOwppbXBvcnQgeyBWQnJlYWRjcnVtYnNTeW1ib2wgfSBmcm9tICIuL3NoYXJlZC5tanMiOyAvLyBUeXBlcwoKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnVkJyZWFkY3J1bWJzJywKICBwcm9wczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoewogICAgY29sb3I6IFN0cmluZywKICAgIGRpc2FibGVkOiBCb29sZWFuLAogICAgZGl2aWRlcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcvJwogICAgfSwKICAgIGljb246IFN0cmluZywKICAgIGl0ZW1zOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0KICB9LCBtYWtlRGVuc2l0eVByb3BzKCkpLCBtYWtlUm91bmRlZFByb3BzKCkpLCBtYWtlVGFnUHJvcHMoewogICAgdGFnOiAndWwnCiAgfSkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcywgX3JlZikgewogICAgdmFyIHNsb3RzID0gX3JlZi5zbG90czsKCiAgICB2YXIgX3VzZURlbnNpdHkgPSB1c2VEZW5zaXR5KHByb3BzLCAndi1icmVhZGNydW1icycpLAogICAgICAgIGRlbnNpdHlDbGFzc2VzID0gX3VzZURlbnNpdHkuZGVuc2l0eUNsYXNzZXM7CgogICAgdmFyIF91c2VSb3VuZGVkID0gdXNlUm91bmRlZChwcm9wcywgJ3YtYnJlYWRjcnVtYnMnKSwKICAgICAgICByb3VuZGVkQ2xhc3NlcyA9IF91c2VSb3VuZGVkLnJvdW5kZWRDbGFzc2VzOwoKICAgIHZhciBfdXNlVGV4dENvbG9yID0gdXNlVGV4dENvbG9yKHRvUmVmKHByb3BzLCAnY29sb3InKSksCiAgICAgICAgdGV4dENvbG9yQ2xhc3NlcyA9IF91c2VUZXh0Q29sb3IudGV4dENvbG9yQ2xhc3NlcywKICAgICAgICB0ZXh0Q29sb3JTdHlsZXMgPSBfdXNlVGV4dENvbG9yLnRleHRDb2xvclN0eWxlczsKCiAgICB2YXIgaXRlbXMgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBwcm9wcy5pdGVtcy5tYXAoZnVuY3Rpb24gKGl0ZW0sIGluZGV4LCBhcnJheSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBwcm9wczogX29iamVjdFNwcmVhZCh7CiAgICAgICAgICAgIGRpc2FibGVkOiBpbmRleCA+PSBhcnJheS5sZW5ndGggLSAxCiAgICAgICAgICB9LCB0eXBlb2YgaXRlbSA9PT0gJ3N0cmluZycgPyB7CiAgICAgICAgICAgIHRleHQ6IGl0ZW0KICAgICAgICAgIH0gOiBpdGVtKQogICAgICAgIH07CiAgICAgIH0pOwogICAgfSk7CiAgICBwcm92aWRlKFZCcmVhZGNydW1ic1N5bWJvbCwgewogICAgICBjb2xvcjogdG9SZWYocHJvcHMsICdjb2xvcicpLAogICAgICBkaXNhYmxlZDogdG9SZWYocHJvcHMsICdkaXNhYmxlZCcpCiAgICB9KTsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfc2xvdHMkZGVmYXVsdDsKCiAgICAgIHJldHVybiBfY3JlYXRlVk5vZGUocHJvcHMudGFnLCB7CiAgICAgICAgImNsYXNzIjogWyd2LWJyZWFkY3J1bWJzJywgZGVuc2l0eUNsYXNzZXMudmFsdWUsIHJvdW5kZWRDbGFzc2VzLnZhbHVlLCB0ZXh0Q29sb3JDbGFzc2VzLnZhbHVlXSwKICAgICAgICAic3R5bGUiOiBbdGV4dENvbG9yU3R5bGVzLnZhbHVlXQogICAgICB9LCB7CiAgICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgICByZXR1cm4gW3Byb3BzLmljb24gJiYgX2NyZWF0ZVZOb2RlKFZJY29uLCB7CiAgICAgICAgICAgICJpY29uIjogcHJvcHMuaWNvbiwKICAgICAgICAgICAgImxlZnQiOiB0cnVlCiAgICAgICAgICB9LCBudWxsLCA4LCBbImljb24iLCAibGVmdCJdKSwgaXRlbXMudmFsdWUubWFwKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgICB2YXIgX3Nsb3RzJGl0ZW07CgogICAgICAgICAgICByZXR1cm4gX2NyZWF0ZVZOb2RlKF9GcmFnbWVudCwgbnVsbCwgW19jcmVhdGVWTm9kZShWQnJlYWRjcnVtYnNJdGVtLCBfbWVyZ2VQcm9wcyh7CiAgICAgICAgICAgICAgImtleSI6IGluZGV4CiAgICAgICAgICAgIH0sIGl0ZW0ucHJvcHMpLCB7CiAgICAgICAgICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gWyhfc2xvdHMkaXRlbSA9IHNsb3RzLml0ZW0pID09IG51bGwgPyB2b2lkIDAgOiBfc2xvdHMkaXRlbS5jYWxsKHNsb3RzLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGl0ZW0pLCB7fSwgewogICAgICAgICAgICAgICAgICBpbmRleDogaW5kZXgKICAgICAgICAgICAgICAgIH0pKV07CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCAxNiksIGluZGV4IDwgcHJvcHMuaXRlbXMubGVuZ3RoIC0gMSAmJiBfY3JlYXRlVk5vZGUoVkJyZWFkY3J1bWJzRGl2aWRlciwgbnVsbCwgewogICAgICAgICAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgICAgICAgICAgcmV0dXJuIFtzbG90cy5kaXZpZGVyID8gc2xvdHMuZGl2aWRlcihfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGl0ZW0pLCB7fSwgewogICAgICAgICAgICAgICAgICBpbmRleDogaW5kZXgKICAgICAgICAgICAgICAgIH0pKSA6IHByb3BzLmRpdmlkZXJdOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSldKTsKICAgICAgICAgIH0pLCAoX3Nsb3RzJGRlZmF1bHQgPSBzbG90cy5kZWZhdWx0KSA9PSBudWxsID8gdm9pZCAwIDogX3Nsb3RzJGRlZmF1bHQuY2FsbChzbG90cyldOwogICAgICAgIH0sCiAgICAgICAgXzogMQogICAgICB9LCA4LCBbImNsYXNzIiwgInN0eWxlIl0pOwogICAgfTsKICB9Cn0pOw=="},{"version":3,"sources":["../../../src/components/VBreadcrumbs/VBreadcrumbs.tsx"],"names":["VBreadcrumbsItem","VBreadcrumbsDivider","VIcon","makeDensityProps","useDensity","makeRoundedProps","useRounded","makeTagProps","useTextColor","defineComponent","VBreadcrumbsSymbol","name","props","color","disabled","divider","type","default","icon","items","tag","setup","slots","densityClasses","roundedClasses","textColorStyles","toRef","computed","index","array","text","item","provide","textColorClasses"],"mappings":";;qGAAA;;AACA,OAAA,qBAAA,C,CAEA;;OACOA,gB;OACAC,mB;SACEC,K,8BAET;;SACSC,gB,EAAkBC,U;SAClBC,gB,EAAkBC,U;SAClBC,Y;SACAC,Y,uCAET;;AACA,SAAA,QAAA,EAAA,OAAA,EAAA,KAAA,QAAA,KAAA;SACSC,e;SACAC,kB,wBAET;;AAQA,eAAeD,eAAe,CAAC;AAC7BE,EAAAA,IAAI,EADyB,cAAA;AAG7BC,EAAAA,KAAK;AACHC,IAAAA,KAAK,EADA,MAAF;AAEHC,IAAAA,QAAQ,EAFH,OAAF;AAGHC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EADG,MAAA;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAHN;AAOHC,IAAAA,IAAI,EAPC,MAAF;AAQHC,IAAAA,KAAK,EAAE;AACLH,MAAAA,IAAI,EADC,KAAA;AAELC,MAAAA,OAAO,EAAE;AAAA,eAAO,EAAP;AAAA;AAFJ;AARJ,KAaAd,gBAbE,EAAF,GAcAE,gBAdE,EAAF,GAeAE,YAAY,CAAC;AAAEa,IAAAA,GAAG,EAAE;AAAP,GAAD,CAfZ,CAHwB;AAqB7BC,EAAAA,KArB6B,iBAqBxB,KArBwB,QAqBJ;AAAA,QAATC,KAAS,QAATA,KAAS;;AACvB,sBAA2BlB,UAAU,CAAA,KAAA,EAArC,eAAqC,CAArC;AAAA,QAAQmB,cAAR,eAAQA,cAAR;;AACA,sBAA2BjB,UAAU,CAAA,KAAA,EAArC,eAAqC,CAArC;AAAA,QAAQkB,cAAR,eAAQA,cAAR;;AACA,wBAA8ChB,YAAY,CAACkB,KAAK,CAAA,KAAA,EAAhE,OAAgE,CAAN,CAA1D;AAAA,QAAM,gBAAN,iBAAM,gBAAN;AAAA,QAA0BD,eAA1B,iBAA0BA,eAA1B;;AACA,QAAMN,KAAK,GAAGQ,QAAQ,CAAC,YAAM;AAC3B,aAAO,KAAK,CAAL,KAAA,CAAA,GAAA,CAAgB,UAAA,IAAA,EAAA,KAAA,EAAA,KAAA;AAAA,eAAyB;AAC9Cf,UAAAA,KAAK;AACHE,YAAAA,QAAQ,EAAEc,KAAK,IAAIC,KAAK,CAALA,MAAAA,GADd;AAAF,aAEC,OAAA,IAAA,KAAA,QAAA,GAA2B;AAAEC,YAAAA,IAAI,EAAEC;AAAR,WAA3B,GAAJ,IAFG;AADyC,SAAzB;AAAA,OAAhB,CAAP;AADF,KAAsB,CAAtB;AASAC,IAAAA,OAAO,CAAA,kBAAA,EAAqB;AAC1BnB,MAAAA,KAAK,EAAEa,KAAK,CAAA,KAAA,EADc,OACd,CADc;AAE1BZ,MAAAA,QAAQ,EAAEY,KAAK,CAAA,KAAA,EAAA,UAAA;AAFW,KAArB,CAAPM;AAKA,WAAO,YAAA;AAAA,UAAA,cAAA;;AAAA,aAAA,YAAA,CAAA,KAAA,CAAA,GAAA,EAAA;AAAA,iBAEI,CAAA,eAAA,EAELT,cAAc,CAFT,KAAA,EAGLC,cAAc,CAHT,KAAA,EAILS,gBAAgB,CANf,KAEI,CAFJ;AAAA,iBAQI,CACLR,eAAe,CADV,KAAA;AARJ,OAAA,EAAA;AAAA,QAAA,OAAA,EAAA;AAAA,iBAAA,CAYD,KAAK,CAAL,IAAA,IAAA,YAAA,CAAA,KAAA,EAAA;AAAA,oBACcb,KAAK,CADnB,IAAA;AAAA,oBAAA;AAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,MAAA,EAZC,MAYD,CAAA,CAZC,EAgBD,KAAK,CAAL,KAAA,CAAA,GAAA,CAAgB,UAAA,IAAA,EAAA,KAAA,EAAA;AAAA,gBAAA,WAAA;;AAAA,mBAAA,YAAA,CAAA,SAAA,EAAA,IAAA,EAAA,CAAA,YAAA,CAAA,gBAAA,EAAA,WAAA,CAAA;AAAA,qBAGNgB;AAHM,aAAA,EAIPG,IAAI,CAJG,KAAA,CAAA,EAAA;AAAA,cAAA,OAAA,EAAA;AAAA,uBAAA,CAAA,CAAA,WAAA,GAMVT,KAAK,CANK,IAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAMVA,WAAAA,CAAAA,IAAAA,CAAAA,KAAAA,kCAAa,IAAbA;AAAwBM,kBAAAA,KAAAA,EAAAA;AAAxBN,mBANU,CAAA;AAAA;AAAA,aAAA,EAAA,EAAA,CAAA,EASZ,KAAK,GAAGV,KAAK,CAALA,KAAAA,CAAAA,MAAAA,GAAR,CAAA,IAAA,YAAA,CAAA,mBAAA,EAAA,IAAA,EAAA;AAAA,cAAA,OAAA,EAAA;AAAA,uBAAA,CAEI,KAAK,CAAL,OAAA,GAAgB,KAAK,CAAL,OAAA,iCAAc,IAAd;AAAyBgB,kBAAAA,KAAAA,EAAAA;AAAzB,mBAAhB,GAAoDhB,KAAK,CAF7D,OAAA,CAAA;AAAA;AAAA,aAAA,CATY,CAAA,CAAA;AAhBf,WAgBD,CAhBC,EAAA,CAAA,cAAA,GAiCDU,KAAK,CAjCJ,OAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAiCDA,cAAAA,CAAAA,IAAAA,CAjCC,KAiCDA,CAjCC,CAAA;AAAA,SAAA;AAAA,QAAA,CAAA,EAAA;AAAA,OAAA,EAAA,CAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;AAAP,KAAA;AAoCD;AA3E4B,CAAD,CAA9B","sourcesContent":["// Styles\nimport './VBreadcrumbs.sass'\n\n// Components\nimport VBreadcrumbsItem from './VBreadcrumbsItem'\nimport VBreadcrumbsDivider from './VBreadcrumbsDivider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, provide, toRef } from 'vue'\nimport { defineComponent } from '@/util'\nimport { VBreadcrumbsSymbol } from './shared'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { LinkProps } from '@/composables/router'\n\nexport type BreadcrumbItem = string | (LinkProps & {\n  text: string\n})\n\nexport default defineComponent({\n  name: 'VBreadcrumbs',\n\n  props: {\n    color: String,\n    disabled: Boolean,\n    divider: {\n      type: String,\n      default: '/',\n    },\n    icon: String,\n    items: {\n      type: Array as PropType<BreadcrumbItem[]>,\n      default: () => ([]),\n    },\n\n    ...makeDensityProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps({ tag: 'ul' }),\n  },\n\n  setup (props, { slots }) {\n    const { densityClasses } = useDensity(props, 'v-breadcrumbs')\n    const { roundedClasses } = useRounded(props, 'v-breadcrumbs')\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n    const items = computed(() => {\n      return props.items.map((item, index, array) => ({\n        props: {\n          disabled: index >= array.length - 1,\n          ...(typeof item === 'string' ? { text: item } : item),\n        },\n      }))\n    })\n\n    provide(VBreadcrumbsSymbol, {\n      color: toRef(props, 'color'),\n      disabled: toRef(props, 'disabled'),\n    })\n\n    return () => (\n      <props.tag\n        class={[\n          'v-breadcrumbs',\n          densityClasses.value,\n          roundedClasses.value,\n          textColorClasses.value,\n        ]}\n        style={[\n          textColorStyles.value,\n        ]}\n      >\n        { props.icon && (\n          <VIcon icon={ props.icon } left />\n        ) }\n\n        { items.value.map((item, index) => (\n          <>\n            <VBreadcrumbsItem\n              key={ index }\n              { ...item.props }\n            >\n              { slots.item?.({ ...item, index }) }\n            </VBreadcrumbsItem>\n\n            { index < props.items.length - 1 && (\n              <VBreadcrumbsDivider>\n                { slots.divider ? slots.divider({ ...item, index }) : props.divider }\n              </VBreadcrumbsDivider>\n            ) }\n          </>\n        )) }\n\n        { slots.default?.() }\n      </props.tag>\n    )\n  },\n})\n"]}]}